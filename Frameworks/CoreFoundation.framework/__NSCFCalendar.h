/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import <CoreFoundation/NSCalendar.h>

__attribute__((visibility("hidden")))
@interface __NSCFCalendar : NSCalendar
{
}

+ (id)calendarWithIdentifier:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)nextWeekendStartDate:(out id *)arg1 interval:(out double *)arg2 options:(unsigned int)arg3 afterDate:(id)arg4;
- (id)dateBySettingHour:(int)arg1 minute:(int)arg2 second:(int)arg3 toDate:(id)arg4 options:(unsigned int)arg5;
- (id)dateBySettingUnit:(unsigned int)arg1 value:(int)arg2 toDate:(id)arg3 options:(unsigned int)arg4;
- (id)nextDateAfterDate:(id)arg1 matchingHour:(int)arg2 minute:(int)arg3 second:(int)arg4 options:(unsigned int)arg5;
- (id)nextDateAfterDate:(id)arg1 matchingUnit:(unsigned int)arg2 value:(int)arg3 options:(unsigned int)arg4;
- (id)nextDateAfterDate:(id)arg1 matchingComponents:(id)arg2 options:(unsigned int)arg3;
- (id)dateByAddingUnit:(unsigned int)arg1 value:(int)arg2 toDate:(id)arg3 options:(unsigned int)arg4;
- (id)components:(unsigned int)arg1 fromDateComponents:(id)arg2 toDateComponents:(id)arg3 options:(unsigned int)arg4;
- (BOOL)rangeOfWeekendStartDate:(out id *)arg1 interval:(out double *)arg2 containingDate:(id)arg3;
- (BOOL)isDateInWeekend:(id)arg1;
- (BOOL)isDateInTomorrow:(id)arg1;
- (BOOL)isDateInYesterday:(id)arg1;
- (BOOL)isDateInToday:(id)arg1;
- (BOOL)isDate:(id)arg1 inSameDayAsDate:(id)arg2;
- (BOOL)isDate:(id)arg1 equalToDate:(id)arg2 toUnitGranularity:(unsigned int)arg3;
- (int)compareDate:(id)arg1 toDate:(id)arg2 toUnitGranularity:(unsigned int)arg3;
- (id)componentsInTimeZone:(id)arg1 fromDate:(id)arg2;
- (id)startOfDayForDate:(id)arg1;
- (id)dateWithEra:(int)arg1 yearForWeekOfYear:(int)arg2 weekOfYear:(int)arg3 weekday:(int)arg4 hour:(int)arg5 minute:(int)arg6 second:(int)arg7 nanosecond:(int)arg8;
- (id)dateWithEra:(int)arg1 year:(int)arg2 month:(int)arg3 day:(int)arg4 hour:(int)arg5 minute:(int)arg6 second:(int)arg7 nanosecond:(int)arg8;
- (int)component:(unsigned int)arg1 fromDate:(id)arg2;
- (void)getHour:(out int *)arg1 minute:(out int *)arg2 second:(out int *)arg3 nanosecond:(out int *)arg4 fromDate:(id)arg5;
- (void)getEra:(out int *)arg1 yearForWeekOfYear:(out int *)arg2 weekOfYear:(out int *)arg3 weekday:(out int *)arg4 fromDate:(id)arg5;
- (void)getEra:(out int *)arg1 year:(out int *)arg2 month:(out int *)arg3 day:(out int *)arg4 fromDate:(id)arg5;
- (id)components:(unsigned int)arg1 fromDate:(id)arg2 toDate:(id)arg3 options:(unsigned int)arg4;
- (id)dateByAddingComponents:(id)arg1 toDate:(id)arg2 options:(unsigned int)arg3;
- (id)components:(unsigned int)arg1 fromDate:(id)arg2;
- (id)dateFromComponents:(id)arg1;
- (BOOL)rangeOfUnit:(unsigned int)arg1 startDate:(id *)arg2 interval:(double *)arg3 forDate:(id)arg4;
- (unsigned int)ordinalityOfUnit:(unsigned int)arg1 inUnit:(unsigned int)arg2 forDate:(id)arg3;
- (struct _NSRange)rangeOfUnit:(unsigned int)arg1 inUnit:(unsigned int)arg2 forDate:(id)arg3;
- (struct _NSRange)maximumRangeOfUnit:(unsigned int)arg1;
- (struct _NSRange)minimumRangeOfUnit:(unsigned int)arg1;
- (id)gregorianStartDate;
- (void)setGregorianStartDate:(id)arg1;
- (unsigned int)minimumDaysInFirstWeek;
- (void)setMinimumDaysInFirstWeek:(unsigned int)arg1;
- (unsigned int)firstWeekday;
- (void)setFirstWeekday:(unsigned int)arg1;
- (id)timeZone;
- (void)setTimeZone:(id)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (id)calendarIdentifier;
- (id)initWithCalendarIdentifier:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (unsigned int)retainCount;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (oneway void)release;
- (id)retain;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;

@end

