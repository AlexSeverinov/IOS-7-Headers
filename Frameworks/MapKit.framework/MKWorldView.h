/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "UIView.h"

#import "GEOResourceManifestTileGroupObserver.h"
#import "MKAnnotationContainerViewDelegate.h"
#import "MKAnnotationManagerDelegate.h"
#import "MKAnnotationMarkerContainer.h"
#import "MKMapGestureControllerDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "VKMapViewDelegate.h"

@class GEOMapRegion, MKAnnotationView, MKBasicMapView, MKMapAnnotationManager, MKMapGestureController, MKNewAnnotationContainerView, MKUserLocation, NSArray, NSTimer, UIGestureRecognizer, UIImageView, UILabel, UILongPressGestureRecognizer, UIPanGestureRecognizer, UITapGestureRecognizer, UITextView, VKLabelMarker, VKMapView, VKPuckAnimator;

@interface MKWorldView : UIView <VKMapViewDelegate, UIGestureRecognizerDelegate, MKAnnotationManagerDelegate, MKAnnotationMarkerContainer, MKMapGestureControllerDelegate, GEOResourceManifestTileGroupObserver, MKAnnotationContainerViewDelegate>
{
    UIView *_contentView;
    MKBasicMapView *_basicMapView;
    VKMapView *_mapView;
    MKMapAnnotationManager *_annotationManager;
    MKNewAnnotationContainerView *_annotationContainer;
    id <MKWorldViewDelegate> _delegate;
    MKUserLocation *_userLocation;
    MKAnnotationView *_userLocationView;
    int _userTrackingMode;
    UILabel *_debugView;
    NSTimer *_debugTimer;
    UIGestureRecognizer *_debugConsoleGesture;
    UITextView *_vectorKitDebugView;
    UIPanGestureRecognizer *_vectorKitStyleDebugGesture;
    UITapGestureRecognizer *_selectingTapGestureRecognizer;
    UITapGestureRecognizer *_nonselectingTapGestureRecognizer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    VKPuckAnimator *_userLocationAnimator;
    NSTimer *_defaultLocationTimer;
    id _annotationRectTest;
    id _annotationCoordinateTest;
    unsigned int _effectsPauseCount;
    int _originalLoopRate;
    int _preGesturingLoopRate;
    UIImageView *_attributionBadgeView;
    struct CGSize _attributionAnchorOffset;
    MKMapGestureController *_gestureController;
    BOOL _shouldSplitRouteLine;
    MKAnnotationView *_longPressStartAnnotationView;
    id _debugConsoleAdditionalInfoProvider;
    struct {
        unsigned int showsUserLocation:1;
        unsigned int ignoreLocationUpdates:1;
        unsigned int debugConsoleEnabled:1;
        unsigned int vectorKitConsoleEnabled:1;
        unsigned int inactive:1;
        unsigned int gesturing:1;
        unsigned int panning:1;
        unsigned int zooming:1;
        unsigned int rotating:1;
        unsigned int animatingRegionChange:1;
        unsigned int didStartPanningDeceleration:1;
        unsigned int regionChangeIsAnimated:1;
        unsigned int canSelectPOIs:1;
        unsigned int canSelectAllLabels:1;
        unsigned int isDraggingAnnotationMarker:1;
        unsigned int userInteractionPausesLocationUpdates:1;
        unsigned int locationPropagationEnabled:1;
        unsigned int locationPulseEnabled:1;
        unsigned int allowsRotation:1;
        unsigned int rotationEnabled:1;
        unsigned int allowsTilt:1;
        unsigned int tiltEnabled:1;
        unsigned int allowsMotionControl:1;
        unsigned int motionControlEnabled:1;
        unsigned int loading:1;
        unsigned int hasCustomLabelScaleFactor:1;
        unsigned int scrollWasEnabledBeforeProgrammaticPan:1;
        unsigned int hasFinishedInitialRender:1;
        unsigned int delegateImplementsDidStartLoading:1;
        unsigned int delegateImplementsDidFinishLoading:1;
        unsigned int delegateImplementsDidFailLoading:1;
        unsigned int delegateImplementsDidBecomeFullyDrawn:1;
        unsigned int delegateImplementsCalloutAccessoryControlTapped:1;
        unsigned int delegateImplementsWillAnimateInAnnotationViews:1;
        unsigned int delegateImplementsDidAnimateInAnnotationViews:1;
        unsigned int delegateImplementsPainterForOverlay:1;
        unsigned int delegateImplementsDidChangeMapType:1;
        unsigned int delegateImplementsWillChangeToMapDisplayStyle:1;
        unsigned int delegateImplementsDidChangeMapDisplayStyle:1;
        unsigned int delegateImplementsDidUpdateUserLocation:1;
        unsigned int delegateImplementsDidFailToLocateUser:1;
        unsigned int delegateImplementsDidChangeUserTrackingModeButton:1;
        unsigned int delegateImplementsDidChangeUserTrackingMode:1;
        unsigned int delegateImplementsRegionWillChangeAnimated:1;
        unsigned int delegateImplementsRegionDidChangeAnimated:1;
        unsigned int delegateImplementsDidChangeVisibleRegion:1;
        unsigned int delegateImplementsShouldSelectLabelMarker:1;
        unsigned int delegateImplementsWillSelectLabelMarker:1;
        unsigned int delegateImplementsLabelMarkerCalloutAccessoryControlTapped:1;
        unsigned int delegateImplementsDidDeselectLabelMarker:1;
        unsigned int delegateImplementsDidBecomePitched:1;
        unsigned int delegateImplementsCanEnter3DModeDidChange:1;
        unsigned int delegateImplementsAllowsRotationDidChange:1;
        unsigned int delegateImplementsAllowsTiltDidChange:1;
        unsigned int delegateImplementsAllowsMotionControlDidChange:1;
        unsigned int delegateImplementsDidStartUserInteraction:1;
        unsigned int delegateImplementsDidStopUserInteraction:1;
        unsigned int delegateImplementsWillStartRespondingToGesture:1;
        unsigned int delegateImplementsDidStopRespondingToGesture:1;
        unsigned int delegateImplementsShouldDelayTapResponseForAnnotationView:1;
        unsigned int delegateImplementsRectToAvoidForCallout:1;
        unsigned int delegateImplementsCurrentRouteMatch:1;
        unsigned int delegateImplementsCanShowFlyover:1;
        unsigned int delegateImplementsShowingFlyover:1;
    } _flags;
}

+ (id)mapRegionWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomScale:(float)arg2 size:(struct CGSize)arg3;
@property(copy, nonatomic) id debugConsoleAdditionalInfoProvider; // @synthesize debugConsoleAdditionalInfoProvider=_debugConsoleAdditionalInfoProvider;
@property(nonatomic) struct CGSize attributionAnchorOffset; // @synthesize attributionAnchorOffset=_attributionAnchorOffset;
@property(readonly, nonatomic) VKMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) int userTrackingMode; // @synthesize userTrackingMode=_userTrackingMode;
@property(readonly, nonatomic) UITapGestureRecognizer *nonselectingTapGestureRecognizer; // @synthesize nonselectingTapGestureRecognizer=_nonselectingTapGestureRecognizer;
@property(nonatomic) BOOL shouldSplitRouteLine; // @synthesize shouldSplitRouteLine=_shouldSplitRouteLine;
@property(nonatomic) id <MKWorldViewDelegate> delegate; // @synthesize delegate=_delegate;
- (struct CGRect)annotationContainerVisibleRect:(id)arg1;
- (struct CGRect)visibleCenteringRectInView:(id)arg1;
- (struct CGRect)visibleRectInView:(id)arg1;
- (void)annotationContainerDidDropPins:(id)arg1;
- (void)annotationContainerWillDropPins:(id)arg1;
- (void)annotationContainerDidAnimateBubble:(id)arg1;
- (void)annotationContainerWillAnimateBubble:(id)arg1;
- (float)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(CDStruct_c3b9c2ee)arg2 maxDistance:(float *)arg3 startPoint:(struct CGPoint *)arg4 shadowStartPoint:(struct CGPoint *)arg5;
- (void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 completionHandler:(id)arg3;
- (void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (BOOL)annotationContainerIsRotated:(id)arg1;
- (BOOL)annotationContainerShouldAlignToPixels:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(CDStruct_31142d93)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_31142d93)arg2 course:(double)arg3;
- (void)puckAnimator:(id)arg1 runAnimation:(id)arg2;
- (void)setTracePlaybackSpeedMultiplier:(double)arg1;
- (BOOL)shouldHideOffscreenSelectedAnnotation;
- (id)annotationCoordinateTest;
- (id)annotationRectTest;
- (void)setAnnotationDeselectionCallback:(id)arg1;
- (void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(CDStruct_c3b9c2ee)arg2 animated:(BOOL)arg3 duration:(double)arg4;
- (void)deselectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2;
- (void)showCalloutIfNecessaryForAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (void)selectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (void)removeAnnotationRepresentation:(id)arg1;
- (void)addAnnotationRepresentation:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2;
- (id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2;
- (void)_handleStyleDebugGesture:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)hitSomethingAtTouch:(id)arg1;
- (void)_handleLongPress:(id)arg1;
- (void)_annotationViewDragStateChanged:(id)arg1;
- (void)_handleTapToDeselect:(id)arg1;
- (void)_handleTapToSelect:(id)arg1;
- (double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
- (void)selectLabelMarker:(id)arg1 animated:(BOOL)arg2;
- (void)selectLabelMarker:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)_toggleDebugConsole:(id)arg1;
@property(nonatomic, getter=isVectorKitStyleDebugEnabled) BOOL vectorKitStyleDebugEnabled;
@property(nonatomic, getter=isVectorKitConsoleEnabled) BOOL vectorKitConsoleEnabled;
@property(nonatomic, getter=isDebugConsoleEnabled) BOOL debugConsoleEnabled;
- (struct CGRect)_debugViewFrame;
- (void)_updateDebugConsole;
- (id)_descriptionForLocation:(id)arg1 compact:(BOOL)arg2;
- (void)_updateUserLocationEffects;
- (void)setUserTrackingMode:(int)arg1 animated:(BOOL)arg2;
- (void)_setUserTrackingMode:(int)arg1 animated:(BOOL)arg2 fromTrackingButton:(BOOL)arg3;
@property(nonatomic) BOOL trackingAutoSelectsZoomScale;
- (void)_updateHeadingOrientation;
- (int)_interfaceOrientation;
- (BOOL)canRotateForHeading;
@property(readonly, nonatomic) MKUserLocation *userLocation;
@property(readonly, nonatomic) BOOL hasUserLocation;
@property(nonatomic) BOOL showsUserLocation;
- (void)resumeUserLocationUpdates;
- (void)pauseUserLocationUpdates;
@property(nonatomic) BOOL userInteractionPausesLocationUpdates;
- (void)_stopUpdatingUserLocation;
- (void)_startUpdatingUserLocation;
@property(nonatomic) BOOL showingTraffic;
- (void)removePersistentOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)addOverlay:(id)arg1;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (id)mapView:(id)arg1 painterForOverlay:(id)arg2;
- (void)mapView:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2;
- (void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2;
@property(readonly, nonatomic) MKAnnotationView *selectedAnnotationView;
@property(nonatomic) BOOL canSelectAllLabels;
@property(nonatomic) BOOL canSelectPOIs;
- (void)deselectLabelMarkerAnimated:(BOOL)arg1;
@property(readonly, nonatomic) VKLabelMarker *selectedLabelMarker;
- (void)dismissExpandedCallout;
- (id)calloutPopoverController;
- (void)addViewsForAnnotations:(id)arg1;
- (id)viewForAnnotation:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *annotationViews;
@property(readonly, nonatomic) NSArray *annotations;
- (void)replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (void)removeAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)addAnnotations:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)addAnnotation:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)addAnnotations:(id)arg1;
- (void)addAnnotation:(id)arg1;
- (void)stopScenicAnimation;
- (void)performScenicAnimationForLocation:(CDStruct_c3b9c2ee)arg1 animationType:(int)arg2;
- (void)prepareScenicAnimationForLocation:(CDStruct_c3b9c2ee)arg1 animationType:(int)arg2 completion:(id)arg3;
@property(nonatomic) BOOL rendersInBackground;
- (id)snapshotImage;
- (void)stopPlaceCardAnimation;
- (void)startPlaceCardAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 andDistance:(double)arg2;
@property(readonly, nonatomic) BOOL canShowAnimationForPlaceCard;
- (void)showAnimationForSearchResult:(id)arg1 withMapRegion:(id)arg2;
- (BOOL)canShowAnimationForSearchResultWithMapRegion:(id)arg1;
@property(readonly, nonatomic, getter=isGoingToDefaultLocation) BOOL goingToDefaultLocation;
- (void)goToDefaultLocation;
@property(readonly, nonatomic) BOOL canShowFlyover;
@property(readonly, nonatomic, getter=isShowingFlyover) BOOL showingFlyover;
@property(readonly, nonatomic, getter=isMotionControlActive) BOOL motionControlActive;
- (void)stopMotionControl;
- (void)startMotionControl;
@property(readonly, nonatomic) BOOL canEnter3DMode;
@property(readonly, nonatomic, getter=isPitched) BOOL pitched;
- (void)exit3DMode;
- (void)enter3DMode;
- (CDStruct_90e2a262)mapRectThatFits:(CDStruct_90e2a262)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (void)goToCoordinateRegion:(CDStruct_90e2a262)arg1 animationType:(int)arg2;
- (void)goToCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomLevel:(float)arg2 animationType:(int)arg3;
- (void)_goToMapRegion:(id)arg1 animationType:(int)arg2;
- (id)_mapRegionWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomScale:(float)arg2;
@property(readonly) float zoomLevel;
- (float)_zoomScale;
- (float)_zoomScaleForMapRegion:(id)arg1;
- (void)setMapRegion:(id)arg1 animationDuration:(double)arg2 pitch:(double)arg3 yaw:(double)arg4 completion:(id)arg5;
- (void)setMapRegion:(id)arg1 animated:(BOOL)arg2 completion:(id)arg3;
- (void)setMapRegion:(id)arg1 animated:(BOOL)arg2;
@property(retain, nonatomic) GEOMapRegion *mapRegion;
- (void)stopPanningAtPoint:(struct CGPoint)arg1;
- (void)updatePanWithTranslation:(struct CGPoint)arg1;
- (void)startPanningAtPoint:(struct CGPoint)arg1;
- (void)zoomOut;
- (void)zoomIn;
- (void)_zoomWithAmount:(double)arg1;
- (id)mapRegionThatFits:(id)arg1 edgePadding:(struct UIEdgeInsets)arg2;
@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 animated:(BOOL)arg2;
@property(nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) double yaw;
@property(nonatomic) BOOL panWithMomentum;
@property(nonatomic, getter=isTiltEnabled) BOOL tiltEnabled;
@property(readonly, nonatomic, getter=isZooming) BOOL zooming;
@property(readonly, nonatomic, getter=isRotating) BOOL rotating;
@property(nonatomic, getter=isRotationEnabled) BOOL rotationEnabled;
@property(nonatomic, getter=isZoomEnabled) BOOL zoomEnabled;
@property(nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
- (void)setUserInteractionEnabled:(BOOL)arg1;
- (BOOL)isUserInteractionEnabled;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_sizeDidChange;
- (void)setHidden:(BOOL)arg1;
- (void)setMapDisplayStyle:(int)arg1 animated:(BOOL)arg2;
@property(nonatomic) int mapDisplayStyle;
@property(nonatomic) unsigned int mapType;
- (BOOL)_supportsVKMapType:(int)arg1;
- (void)stopEffects;
- (void)startEffects;
@property(readonly, nonatomic) BOOL regionChangeIsUserInitiated;
@property(readonly, nonatomic, getter=isChangingRegion) BOOL changingRegion;
- (id)mapView:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)mapView:(id)arg1 showingFlyoverDidChange:(BOOL)arg2;
- (void)mapView:(id)arg1 canShowFlyoverDidChange:(BOOL)arg2;
- (void)mapView:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)mapView:(id)arg1 didFinishChangingMapDisplayStyle:(int)arg2;
- (void)mapView:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)mapView:(id)arg1 willTransitionFrom:(int)arg2 to:(int)arg3 duration:(double)arg4;
- (void)gestureControllerDidStopTiltingDecelerating:(id)arg1;
- (void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartTilting:(id)arg1;
- (void)gestureControllerDidStopRotatingDecelerating:(id)arg1;
- (void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartRotating:(id)arg1;
- (void)gestureControllerDidStopTwoFingerLongPress:(id)arg1;
- (void)gestureControllerWillStartTwoFingerLongPress:(id)arg1;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(int)arg2;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(int)arg2 willDecelerate:(BOOL)arg3;
- (void)gestureControllerWillStartZooming:(id)arg1 animated:(BOOL)arg2;
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartPanning:(id)arg1;
- (void)mapView:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)mapViewDidStopRegionAnimation:(id)arg1 completed:(BOOL)arg2;
- (void)mapViewWillStartRegionAnimation:(id)arg1;
- (void)_updateIconsShouldAlignToPixels;
- (BOOL)_iconsShouldAlignToPixels;
- (void)mapViewDidChangeVisibleRegion:(id)arg1;
- (void)_didChangeRegion;
- (void)_willChangeRegion:(BOOL)arg1 userInitiated:(BOOL)arg2;
- (void)gestureControllerDidStopUserInteraction:(id)arg1;
- (void)gestureControllerWillStartUserInteraction:(id)arg1;
- (void)mapViewDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(BOOL)arg2;
- (void)mapViewDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapViewDidFinishLoadingTiles:(id)arg1;
- (void)mapViewDidStartLoadingTiles:(id)arg1;
- (void)mapViewDidDraw:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)_addDebugGesture;
- (struct UIEdgeInsets)defaultInsetsForPinAnnotations;
@property(nonatomic) struct UIEdgeInsets fullyOccludedEdgeInsets;
@property(nonatomic) struct UIEdgeInsets edgeInsets;
- (void)restoreViewportFromDictionary:(id)arg1;
- (id)viewportDictionary;
@property(nonatomic, getter=isLoadingEnabled) BOOL loadingEnabled;
@property(nonatomic, getter=isLocationPulseEnabled) BOOL locationPulseEnabled;
@property(nonatomic, getter=isLocationPropagationEnabled) BOOL locationPropagationEnabled;
@property(nonatomic) BOOL allowsPopoverWhenNotInWindow;
- (void)_updateAllowsMotionControl;
@property(readonly, nonatomic) BOOL allowsMotionControl;
- (void)_updateAllowsTilt;
@property(readonly, nonatomic) BOOL allowsTilt;
- (void)_updateAllowsRotation;
@property(readonly, nonatomic) BOOL allowsRotation;
- (id)detailedDescription;
- (id)mapAttributionWithStringAttributes:(id)arg1;
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (void)geoDefaultsDidChange:(id)arg1;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)_updateAttribution;
@property(readonly, nonatomic, getter=isFullyDrawn) BOOL fullyDrawn;
@property(nonatomic) int labelScaleFactor;
@property(nonatomic) double longPressDuration;
- (void)didMoveToWindow;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 gestureRecognizerHostView:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

