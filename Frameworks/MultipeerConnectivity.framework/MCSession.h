/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "NSObject.h"

@class MCPeerID, NSArray, NSMutableDictionary, NSObject<OS_dispatch_queue>;

@interface MCSession : NSObject
{
    id <MCSessionDelegate> _delegate;
    MCPeerID *_myPeerID;
    NSArray *_securityIdentity;
    int _encryptionPreference;
    struct OpaqueGCKSession *_gckSession;
    struct OpaqueAGPSession *_agpSession;
    unsigned int _gckPID;
    NSMutableDictionary *_peerIDMap;
    NSObject<OS_dispatch_queue> *_syncQueue;
    id <MCSessionDelegate> _privateDelegate;
    NSMutableDictionary *_peerStates;
}

+ (id)stringForNSSessionSendDataMode:(int)arg1;
+ (id)stringForSessionState:(int)arg1;
@property(retain, nonatomic) NSMutableDictionary *peerStates; // @synthesize peerStates=_peerStates;
@property(nonatomic) id <MCSessionDelegate> privateDelegate; // @synthesize privateDelegate=_privateDelegate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
@property(retain, nonatomic) NSMutableDictionary *peerIDMap; // @synthesize peerIDMap=_peerIDMap;
@property(nonatomic) unsigned int gckPID; // @synthesize gckPID=_gckPID;
@property(nonatomic) struct OpaqueAGPSession *agpSession; // @synthesize agpSession=_agpSession;
@property(nonatomic) struct OpaqueGCKSession *gckSession; // @synthesize gckSession=_gckSession;
@property(readonly, nonatomic) int encryptionPreference; // @synthesize encryptionPreference=_encryptionPreference;
@property(readonly, nonatomic) NSArray *securityIdentity; // @synthesize securityIdentity=_securityIdentity;
@property(readonly, nonatomic) MCPeerID *myPeerID; // @synthesize myPeerID=_myPeerID;
- (BOOL)sendData:(id)arg1 toPeer:(id)arg2 stream:(id)arg3 isEndOfStream:(BOOL)arg4;
- (void)startStream:(id)arg1 withPeer:(id)arg2;
- (id)startStreamWithName:(id)arg1 toPeer:(id)arg2 error:(id *)arg3;
- (void)syncStartStream:(id)arg1 withPeer:(id)arg2;
- (void)disconnect;
- (void)sendResourceAtURL:(id)arg1 toPeer:(id)arg2 withTimeout:(double)arg3 completionHandler:(id)arg4;
- (id)connectedPeers;
- (BOOL)sendData:(id)arg1 toPeers:(id)arg2 withMode:(int)arg3 error:(id *)arg4;
- (void)syncSendData:(id)arg1 toPeers:(id)arg2 withDataMode:(int)arg3;
- (void)connectPeer:(id)arg1 withNearbyConnectionData:(id)arg2 timeout:(double)arg3;
- (void)syncConnectPeer:(id)arg1 withConnectionData:(id)arg2;
- (void)nearbyConnectionDataForPeer:(id)arg1 withCompletionHandler:(id)arg2;
- (void)syncGetConnectionDataForPID:(unsigned int)arg1 completionHandlerCopy:(id)arg2;
- (id)getSessionInfo;
- (void)dealloc;
- (id)initWithPeer:(id)arg1 securityIdentity:(id)arg2 encryptionPreference:(int)arg3;
- (void)handleNetworkEvent:(CDStruct_68f9d01f *)arg1 pid:(unsigned int)arg2;
- (void)syncHandleXDataDataPacket:(char *)arg1 packetSize:(int)arg2 forPeer:(id)arg3 state:(id)arg4;
@property(nonatomic) id <MCSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void)peerDidDeclineInvitation:(id)arg1;

@end

