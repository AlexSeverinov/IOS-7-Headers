/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import <MediaPlayer/MPQueueFeeder.h>

#import "MCProfileConnectionObserver.h"

@class ADBannerView, MPAudioDeviceController, MPRadioAdObserver, NSArray, NSData, NSDictionary, NSMutableArray, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, RadioStation;

@interface MPRadioQueueFeeder : MPQueueFeeder <MCProfileConnectionObserver>
{
    MPRadioAdObserver *_adObserver;
    MPAudioDeviceController *_audioDeviceController;
    BOOL _didFailToFetchTracks;
    BOOL _isExplicitContentRestricted;
    BOOL _isFetchingTracks;
    BOOL _deviceIsDocked;
    BOOL _deviceIsLocked;
    int _lockStateNotifyToken;
    BOOL _lockStateNotifyTokenIsValid;
    NSDictionary *_pickedRoute;
    BOOL _playbackIsPaused;
    NSObject<OS_dispatch_source> *_playbackTimerSource;
    ADBannerView *_skipAdView;
    NSData *_skipAdTrackData;
    RadioStation *_station;
    NSObject<OS_dispatch_queue> *_trackHistoryQueue;
    NSMutableArray *_tracks;
    BOOL _wasUsingBackgroundNetwork;
    unsigned int _initialTrackIndex;
}

+ (BOOL)shouldRestorePlaybackQueue;
+ (id)imageCache;
+ (void)_radioConfigurationDidChangeNotification:(id)arg1;
+ (void)initialize;
@property(nonatomic) unsigned int initialTrackIndex; // @synthesize initialTrackIndex=_initialTrackIndex;
- (void).cxx_destruct;
- (void)_updatePlaybackTimerForDeviceStateChange;
- (void)_updateIsExplicitContentRestrictedForProfileConnection:(id)arg1;
- (id)_tracksWithPromotionalContentFromTracks:(id)arg1;
- (void)_insertAdTrack:(id)arg1 afterCurrentItemIndex:(unsigned int)arg2;
- (unsigned int)_indexOfCurrentItem;
- (void)_fetchAdditionalTracksAndKeepExistingTracks:(BOOL)arg1 withCompletionHandler:(id)arg2;
- (BOOL)_endPlaybackIfNecessaryForNetworkType;
- (void)_cancelScheduledAds;
- (void)_cancelPlaybackTimer;
- (BOOL)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(BOOL)arg2 initialTrackIndex:(unsigned int)arg3 startPlayback:(BOOL)arg4;
@property(copy, nonatomic) NSArray *tracks;
@property(retain, nonatomic) RadioStation *station; // @synthesize station=_station;
- (void)reloadTracksForPlayingStation;
- (void)loadArtworkImageForItem:(id)arg1 completionHandler:(id)arg2;
- (void)_songBeganResponseNotification:(id)arg1;
- (void)_radioModelDidChangeNotification:(id)arg1;
- (void)_playbackStateDidChangeNotification:(id)arg1;
- (void)_networkTypeDidChangeNotification:(id)arg1;
- (void)_itemIsBannedDidChangedNotification:(id)arg1;
- (void)_itemDidFinishLoadingNotification:(id)arg1;
- (void)_itemWillChangeNotification:(id)arg1;
- (void)_didFailToLoadAdNotification:(id)arg1;
- (void)_cellularNetworkingAllowedDidChangeNotification:(id)arg1;
- (void)_bufferingStateDidChangeNotification:(id)arg1;
- (void)profileConnectionDidReceiveRestrictionChangedNotification:(id)arg1 userInfo:(id)arg2;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;
- (unsigned int)initialPlaybackQueueDepth;
- (void)audioDeviceControllerAudioRoutesChanged:(id)arg1;
- (BOOL)shouldBeginPlaybackOfItem:(id)arg1 error:(id *)arg2;
- (void)setAVController:(id)arg1;
- (BOOL)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(BOOL)arg2;
- (int)playbackMode;
- (id)localizedPositionInPlaylistString:(id)arg1;
- (id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3;
- (unsigned int)itemTypeForIndex:(unsigned int)arg1;
- (unsigned int)itemCount;
- (Class)itemClass;
- (BOOL)hasValidItemAtIndex:(unsigned int)arg1;
- (id)copyRawItemAtIndex:(unsigned int)arg1;
- (void)controller:(id)arg1 willChangePlaybackIndexBy:(int)arg2 deltaType:(int)arg3 ignoreElapsedTime:(BOOL)arg4 allowSkippingAds:(BOOL)arg5;
- (id)_trackAtIndex:(unsigned int)arg1;
- (BOOL)canSkipToPreviousItem;
- (BOOL)canSkipItem:(id)arg1;
- (BOOL)canSeek;
- (void)dealloc;
- (id)init;

@end

